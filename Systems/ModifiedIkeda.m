function out = ModifiedIkeda
out{1} = @init;
out{2} = @fun_eval;
out{3} = @jacobian;
out{4} = @jacobianp;
out{5} = @hessians;
out{6} = @hessiansp;
out{7} = @der3;
out{8} = [];
out{9} = [];

% --------------------------------------------------------------------------
function dydt = fun_eval(t,kmrgd,A,b,e,phi,q)
m=phi - q / (1 + kmrgd(1)^2 + kmrgd(2)^2);
dydt=[A + b*kmrgd(1)*cos(m) - e*kmrgd(2)*sin(m);
b*kmrgd(2)*cos(m) + e*kmrgd(1)*sin(m);];

% --------------------------------------------------------------------------
function [tspan,y0,options] = init
handles = feval(ModifiedIkeda);
y0=[0,0];
options = odeset('Jacobian',handles(3),'JacobianP',handles(4),'Hessians',handles(5),'HessiansP',handles(6));
tspan = [0 10];

% --------------------------------------------------------------------------
function jac = jacobian(t,kmrgd,A,b,e,phi,q)
jac=[ b*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - (2*b*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 , - e*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - (2*e*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 ; e*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) + (2*e*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 , b*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - (2*b*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (2*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 ];
% --------------------------------------------------------------------------
function jacp = jacobianp(t,kmrgd,A,b,e,phi,q)
jacp=[ 1 , kmrgd(1)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) , -kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) , - e*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - b*kmrgd(1)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) , (e*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1) + (b*kmrgd(1)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1) ; 0 , kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) , kmrgd(1)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) , e*kmrgd(1)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - b*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) , (b*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1) - (e*kmrgd(1)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1) ];
% --------------------------------------------------------------------------
function hess = hessians(t,kmrgd,A,b,e,phi,q)
hess1=[ (8*b*q*kmrgd(1)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (2*e*q*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (6*b*q*kmrgd(1)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (4*b*q^2*kmrgd(1)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*e*q*kmrgd(1)^2*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (4*e*q^2*kmrgd(1)^2*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 , (8*e*q*kmrgd(1)*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (2*b*q*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*e*q*kmrgd(1)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q*kmrgd(1)^2*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)^2*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (4*e*q^2*kmrgd(1)*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 ; (6*e*q*kmrgd(1)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (4*e*q^2*kmrgd(1)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*b*q*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (8*e*q*kmrgd(1)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*b*q*kmrgd(1)^2*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)^2*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 , (2*e*q*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*b*q*kmrgd(1)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (8*e*q*kmrgd(1)^2*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*b*q*kmrgd(1)*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*e*q^2*kmrgd(1)^2*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 ];
hess2=[ (8*e*q*kmrgd(1)*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (2*b*q*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*e*q*kmrgd(1)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q*kmrgd(1)^2*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)^2*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (4*e*q^2*kmrgd(1)*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 , (4*e*q^2*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (6*e*q*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*b*q*kmrgd(1)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*e*q*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*b*q*kmrgd(1)*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 ; (2*e*q*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*b*q*kmrgd(1)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (8*e*q*kmrgd(1)^2*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*b*q*kmrgd(1)*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*e*q^2*kmrgd(1)^2*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 , (2*e*q*kmrgd(1)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (4*b*q^2*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (6*b*q*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (8*e*q*kmrgd(1)*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*e*q^2*kmrgd(1)*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 ];
hess(:,:,1) =hess1;
hess(:,:,2) =hess2;
% --------------------------------------------------------------------------
function hessp = hessiansp(t,kmrgd,A,b,e,phi,q)
hessp1=[ 0 , 0 ; 0 , 0 ];
hessp2=[ cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - (2*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 , -(2*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 ; -(2*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 , cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - (2*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 ];
hessp3=[ -(2*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 , - sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - (2*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 ; sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) + (2*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 , (2*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 ];
hessp4=[ (2*e*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*b*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - b*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) , (2*e*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - e*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - (2*b*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 ; e*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - (2*e*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*b*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 , - b*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)) - (2*b*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*e*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 ];
hessp5=[ (b*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1) - (2*b*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*e*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (2*b*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (2*e*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 , (e*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1) - (2*e*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*b*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (2*e*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (2*b*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 ; (2*e*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (e*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1) - (2*b*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (2*e*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (2*b*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 , (b*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1) - (2*b*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (2*e*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (2*b*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (2*e*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 ];
hessp(:,:,1) =hessp1;
hessp(:,:,2) =hessp2;
hessp(:,:,3) =hessp3;
hessp(:,:,4) =hessp4;
hessp(:,:,5) =hessp5;
%---------------------------------------------------------------------------
function tens3  = der3(t,kmrgd,A,b,e,phi,q)
tens31=[ (48*b*q^2*kmrgd(1)^4*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (24*b*q^2*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (6*b*q*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q^3*kmrgd(1)^4*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 + (48*b*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (48*b*q*kmrgd(1)^4*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (24*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (48*e*q*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (12*e*q^2*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*e*q^3*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*e*q^2*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 , (4*e*q^2*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*e*q*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (4*e*q^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*e*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*e*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (24*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*e*q^3*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*e*q^2*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (12*b*q^2*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*b*q*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*b*q^2*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (48*e*q*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*b*q^3*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 ; (6*e*q*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (8*e*q^3*kmrgd(1)^4*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (24*e*q^2*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*e*q^2*kmrgd(1)^4*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (48*e*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (48*e*q*kmrgd(1)^4*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (24*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (12*b*q^2*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*b*q*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*b*q^2*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (8*b*q^3*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 , (8*b*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*b*q^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*b*q*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (24*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (48*b*q^2*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (8*b*q^3*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 + (48*e*q*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (12*e*q^2*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (8*e*q^3*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*b*q*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*e*q^2*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 ];
tens32=[ (4*e*q^2*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*e*q*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (4*e*q^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*e*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*e*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (24*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*e*q^3*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*e*q^2*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (12*b*q^2*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*b*q*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*b*q^2*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (48*e*q*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*b*q^3*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 , (8*b*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*b*q^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*b*q*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (24*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (48*b*q^2*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (8*b*q^3*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*e*q*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (12*e*q^2*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*e*q^3*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*b*q*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*e*q^2*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 ; (8*b*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*b*q^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*b*q*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (24*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (48*b*q^2*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (8*b*q^3*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 + (48*e*q*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (12*e*q^2*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (8*e*q^3*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*b*q*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*e*q^2*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 , (2*e*q*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (4*e*q^2*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*e*q^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (8*e*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (8*e*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (24*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (8*e*q^3*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 + (48*e*q^2*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (12*b*q^2*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*b*q*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*b*q^2*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (48*e*q*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*b*q^3*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 ];
tens33=[ (4*e*q^2*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*e*q*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (4*e*q^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*e*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*e*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (24*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (8*e*q^3*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*e*q^2*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (12*b*q^2*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*b*q*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*b*q^2*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (48*e*q*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*b*q^3*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 , (8*b*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*b*q^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*b*q*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (24*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (48*b*q^2*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (8*b*q^3*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*e*q*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (12*e*q^2*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*e*q^3*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*b*q*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*e*q^2*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 ; (8*b*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*b*q^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*b*q*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (24*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (48*b*q^2*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (8*b*q^3*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 + (48*e*q*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (12*e*q^2*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (8*e*q^3*kmrgd(1)^3*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*b*q*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*e*q^2*kmrgd(1)^3*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 , (2*e*q*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (4*e*q^2*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*e*q^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (8*e*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (8*e*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (24*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (8*e*q^3*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 + (48*e*q^2*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (12*b*q^2*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*b*q*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*b*q^2*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (48*e*q*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*b*q^3*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 ];
tens34=[ (8*b*q*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (4*b*q^2*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*b*q^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (2*b*q*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (24*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (48*b*q^2*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (8*b*q^3*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*e*q*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (12*e*q^2*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*e*q^3*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (48*b*q*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*e*q^2*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 , (8*e*q^3*kmrgd(2)^4*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 - (6*e*q*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (24*e*q^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*e*q^2*kmrgd(2)^4*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (48*e*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (48*e*q*kmrgd(2)^4*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (24*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (12*b*q^2*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*b*q*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*b*q^2*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (8*b*q^3*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 ; (2*e*q*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 - (4*e*q^2*kmrgd(1)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (4*e*q^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (8*e*q*kmrgd(1)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (8*e*q*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (24*b*q*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (8*e*q^3*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 + (48*e*q^2*kmrgd(1)^2*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (12*b*q^2*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (48*b*q*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (48*b*q^2*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 + (48*e*q*kmrgd(1)^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 + (8*b*q^3*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 , (48*b*q^2*kmrgd(2)^4*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 - (24*b*q^2*kmrgd(2)^2*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (6*b*q*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^2 + (8*b*q^3*kmrgd(2)^4*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 + (48*b*q*kmrgd(2)^2*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 - (48*b*q*kmrgd(2)^4*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (24*e*q*kmrgd(1)*kmrgd(2)*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^3 + (48*e*q*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (12*e*q^2*kmrgd(1)*kmrgd(2)*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^4 - (8*e*q^3*kmrgd(1)*kmrgd(2)^3*cos(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^6 + (48*e*q^2*kmrgd(1)*kmrgd(2)^3*sin(phi - q/(kmrgd(1)^2 + kmrgd(2)^2 + 1)))/(kmrgd(1)^2 + kmrgd(2)^2 + 1)^5 ];
tens3(:,:,1,1) =tens31;
tens3(:,:,1,2) =tens32;
tens3(:,:,2,1) =tens33;
tens3(:,:,2,2) =tens34;
%---------------------------------------------------------------------------
function tens4  = der4(t,kmrgd,A,b,e,phi,q)
%---------------------------------------------------------------------------
function tens5  = der5(t,kmrgd,A,b,e,phi,q)
